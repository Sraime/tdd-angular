export declare type MockedFunction = () => any;
export declare const mockServiceHelper: {
    extractMethodsFromPrototype(service: any): string[];
    extractPropertiesFromPrototype(service: any): string[];
    extractPropertyDescriptor(service: any, prop: string): PropertyDescriptor | undefined;
    mock<T = MockedFunction>(instance: any, name: string, style?: 'get' | 'set'): T;
    mockFunction(mockName: string): MockedFunction;
    registerMockFunction(mockFunction: (mockName: string) => MockedFunction | undefined): void;
    replaceWithMocks(value: any): any;
};
export declare function MockService(service?: boolean | number | string | null, mockNamePrefix?: string): undefined;
export declare function MockService<T>(service: new (...args: any[]) => T, mockNamePrefix?: string): T;
export declare function MockService<T = any>(service: object, mockNamePrefix?: string): T;
