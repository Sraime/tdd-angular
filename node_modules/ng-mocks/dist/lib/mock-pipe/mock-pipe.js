"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockPipe = exports.MockPipes = void 0;
var core_1 = require("@angular/core");
var testing_1 = require("@angular/core/testing");
var common_1 = require("../common");
var ng_mocks_universe_1 = require("../common/ng-mocks-universe");
var reflect_1 = require("../common/reflect");
function MockPipes() {
    var pipes = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        pipes[_i] = arguments[_i];
    }
    return pipes.map(function (pipe) { return MockPipe(pipe, undefined); });
}
exports.MockPipes = MockPipes;
var defaultTransform = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return undefined;
};
function MockPipe(pipe, transform) {
    if (transform === void 0) { transform = defaultTransform; }
    if (testing_1.getTestBed()._instantiated) {
        try {
            return common_1.getMockedNgDefOf(pipe, 'p');
        }
        catch (error) {
        }
    }
    if (ng_mocks_universe_1.ngMocksUniverse.flags.has('cachePipe') && ng_mocks_universe_1.ngMocksUniverse.cache.has(pipe)) {
        return ng_mocks_universe_1.ngMocksUniverse.cache.get(pipe);
    }
    var meta;
    if (!meta) {
        try {
            meta = reflect_1.pipeResolver.resolve(pipe);
        }
        catch (e) {
            throw new Error('ng-mocks is not in JIT mode and cannot resolve declarations');
        }
    }
    var name = meta.name;
    var options = {
        name: name,
    };
    var PipeMock = (function (_super) {
        __extends(PipeMock, _super);
        function PipeMock() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.transform = transform || defaultTransform;
            return _this;
        }
        PipeMock = __decorate([
            core_1.Pipe(options),
            common_1.MockOf(pipe)
        ], PipeMock);
        return PipeMock;
    }(common_1.Mock));
    if (ng_mocks_universe_1.ngMocksUniverse.flags.has('cachePipe')) {
        ng_mocks_universe_1.ngMocksUniverse.cache.set(pipe, PipeMock);
    }
    return PipeMock;
}
exports.MockPipe = MockPipe;
//# sourceMappingURL=mock-pipe.js.map