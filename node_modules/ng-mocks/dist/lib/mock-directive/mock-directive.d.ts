import { ElementRef, TemplateRef, ViewContainerRef } from '@angular/core';
import { AbstractType, MockControlValueAccessor, Type } from '../common';
export declare type MockedDirective<T> = T & MockControlValueAccessor & {
    __element?: ElementRef;
    __isStructural: boolean;
    __template?: TemplateRef<any>;
    __viewContainer?: ViewContainerRef;
    __render($implicit?: any, variables?: {
        [key: string]: any;
    }): void;
};
export declare function MockDirectives(...directives: Array<Type<any>>): Array<Type<MockedDirective<any>>>;
export declare function MockDirective<TDirective>(directive: Type<TDirective>): Type<MockedDirective<TDirective>>;
export declare function MockDirective<TDirective>(directive: AbstractType<TDirective>): Type<MockedDirective<TDirective>>;
