"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.decorateQueries = exports.decorateOutputs = exports.decorateInputs = void 0;
var core_1 = require("@angular/core");
function decorateInputs(cls, inputs) {
    var e_1, _a;
    if (inputs) {
        try {
            for (var inputs_1 = __values(inputs), inputs_1_1 = inputs_1.next(); !inputs_1_1.done; inputs_1_1 = inputs_1.next()) {
                var input = inputs_1_1.value;
                var _b = __read(input.split(': '), 2), key = _b[0], alias = _b[1];
                core_1.Input(alias)(cls.prototype, key);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (inputs_1_1 && !inputs_1_1.done && (_a = inputs_1.return)) _a.call(inputs_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
}
exports.decorateInputs = decorateInputs;
function decorateOutputs(cls, outputs) {
    var e_2, _a;
    if (outputs) {
        try {
            for (var outputs_1 = __values(outputs), outputs_1_1 = outputs_1.next(); !outputs_1_1.done; outputs_1_1 = outputs_1.next()) {
                var output = outputs_1_1.value;
                var _b = __read(output.split(': '), 2), key = _b[0], alias = _b[1];
                core_1.Output(alias)(cls.prototype, key);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (outputs_1_1 && !outputs_1_1.done && (_a = outputs_1.return)) _a.call(outputs_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    }
}
exports.decorateOutputs = decorateOutputs;
function decorateQueries(cls, queries) {
    var e_3, _a;
    if (queries) {
        try {
            for (var _b = __values(Object.keys(queries)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                var query = queries[key];
                if (!query) {
                    continue;
                }
                if (query.ngMetadataName === 'ContentChild') {
                    core_1.ContentChild(query.selector, query)(cls.prototype, key);
                }
                if (query.ngMetadataName === 'ContentChildren') {
                    core_1.ContentChildren(query.selector, query)(cls.prototype, key);
                }
                if (query.ngMetadataName === 'ViewChild') {
                    core_1.ViewChild(query.selector, query)(cls.prototype, key);
                }
                if (query.ngMetadataName === 'ViewChildren') {
                    core_1.ViewChildren(query.selector, query)(cls.prototype, key);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
    }
}
exports.decorateQueries = decorateQueries;
//# sourceMappingURL=decorate.js.map